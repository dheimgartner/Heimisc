usethis::use_data_raw("gemeindetypologie")
usethis::use_data_raw("urbanisierungsgrad")
## code to prepare `gemeindetypologie` dataset goes here
## https://www.agvchapp.bfs.admin.ch/de/typologies/query
library(tidyverse)
rm(list = ls())
path <- "data-raw/gemeindetypologie.xlsx"
sheet1 <- "Daten"
sheet2 <- "CH1+CL_GDET9+2012.1"
gemeindetypologie <-
path %>%
readxl::read_excel(sheet = sheet1, skip = 1) %>%
drop_na() %>%
select(-c("St채dtische / L채ndliche Gebiete", "Gemeindetypologie 2012 (25 Typen)")) %>%
rename(Code = "Gemeindetypologie 2012 (9 Typen)")
labels <-
path %>%
readxl::read_excel(sheet = sheet2, skip = 1)
gemeindetypologie <-
gemeindetypologie %>%
left_join(labels)
## add plz
devtools::load_all()
gemeindetypologie <-
gemeindetypologie %>%
mutate(across(!all_of(c("Gemeindename", "BFS Gde-nummer")), factor))
gemeindetypologie <-
gemeindetypologie %>%
left_join(mpp::bfs_crosswalks, by = c("BFS Gde-nummer" = "GDENR")) %>%
select(gemeindename = GDENAMK, kanton = Kanton, plz = PLZ4, code = Code, gemeindetypologie = Label)
usethis::use_data_raw("bfs_crosswalks")
## code to prepare `bfs_crosswalks` dataset goes here
## https://www.bfs.admin.ch/asset/de/do-t-09.02-gwr-37
library(tidyverse)
rm(list = ls())
path <- "data-raw/bfs-crosswalks.xlsx"
sheet <- "PLZ4"
bfs_crosswalks <-
path %>%
readxl::read_excel(sheet = sheet, col_names = TRUE) %>%
drop_na()
## code to prepare `bfs_crosswalks` dataset goes here
## https://www.bfs.admin.ch/asset/de/do-t-09.02-gwr-37
library(tidyverse)
rm(list = ls())
path <- "data-raw/bfs_crosswalks.xlsx"
sheet <- "PLZ4"
bfs_crosswalks <-
path %>%
readxl::read_excel(sheet = sheet, col_names = TRUE) %>%
drop_na()
bfs_crosswalks <-
bfs_crosswalks %>%
mutate(across(!all_of(c("PLZ4", "%_IN_GDE", "GDENR")), factor))
max_perc <-
bfs_crosswalks %>%
group_by(PLZ4) %>%
summarise(max_perc = max(`%_IN_GDE`, na.rm = TRUE)) %>%
ungroup()
bfs_crosswalks <-
max_perc %>%
left_join(bfs_crosswalks, by = c("PLZ4", "max_perc" = "%_IN_GDE")) %>%
select(PLZ4, everything(), -max_perc) %>%
group_by(PLZ4) %>%
slice(1) %>%
ungroup()
usethis::use_data(bfs_crosswalks, overwrite = TRUE)
## code to prepare `gemeindetypologie` dataset goes here
## https://www.agvchapp.bfs.admin.ch/de/typologies/query
library(tidyverse)
rm(list = ls())
path <- "data-raw/gemeindetypologie.xlsx"
sheet1 <- "Daten"
sheet2 <- "CH1+CL_GDET9+2012.1"
gemeindetypologie <-
path %>%
readxl::read_excel(sheet = sheet1, skip = 1) %>%
drop_na() %>%
select(-c("St채dtische / L채ndliche Gebiete", "Gemeindetypologie 2012 (25 Typen)")) %>%
rename(Code = "Gemeindetypologie 2012 (9 Typen)")
labels <-
path %>%
readxl::read_excel(sheet = sheet2, skip = 1)
gemeindetypologie <-
gemeindetypologie %>%
left_join(labels)
## add plz
devtools::load_all()
gemeindetypologie <-
gemeindetypologie %>%
mutate(across(!all_of(c("Gemeindename", "BFS Gde-nummer")), factor))
gemeindetypologie <-
gemeindetypologie %>%
left_join(Heimisc::bfs_crosswalks, by = c("BFS Gde-nummer" = "GDENR")) %>%
select(gemeindename = GDENAMK, kanton = Kanton, plz = PLZ4, code = Code, gemeindetypologie = Label)
usethis::use_data(gemeindetypologie, overwrite = TRUE)
## code to prepare `urbanisierungsgrad` dataset goes here
## https://www.agvchapp.bfs.admin.ch/de/typologies/query
library(tidyverse)
rm(list = ls())
path <- "data-raw/urbanisierungsgrad.xlsx"
sheet1 <- "Daten"
sheet2 <- "CH1+CL_DEGURB+2017.1"
urbanisierungsgrad <-
path %>%
readxl::read_excel(sheet = sheet1, skip = 1) %>%
drop_na() %>%
rename(Code = "Urbanisierungsgrad 2011 (DEGURBA) - eurostat")
labels <-
path %>%
readxl::read_excel(sheet = sheet2, skip = 1)
urbanisierungsgrad <-
urbanisierungsgrad %>%
left_join(labels)
## add plz
urbanisierungsgrad <-
urbanisierungsgrad %>%
mutate(across(!all_of(c("Gemeindename", "BFS Gde-nummer")), factor))
devtools::load_all()
urbanisierungsgrad <-
urbanisierungsgrad %>%
left_join(Heimisc::bfs_crosswalks, by = c("BFS Gde-nummer" = "GDENR")) %>%
select(gemeindename = GDENAMK, kanton = Kanton, plz = PLZ4, code = Code, urbanisierungsgrad = Label)
usethis::use_data(urbanisierungsgrad, overwrite = TRUE)
devtools::load_all()
devtools::document()
usethis::use_version()
usethis::use_version()
Heimisc::reinstall()
Heimisc::urbanisierungsgrad
Heimisc::gemeindetypologie
usethis::use_data_raw("labels")
# Gemeindetypologie & Urbanisierungsgrad
path <- "./data-raw/typo_urbalabels.xlsx"
sheets <- readxl::excel_sheets(path)
labels_ <-
map(sheets, function(s) {
lab <- readxl::read_xlsx(path, sheet = s)
lab <-
lab %>%
select(from, to, filter) %>%
arrange(filter, to)
})
library(tidyverse)
library(readxl)
# Gemeindetypologie & Urbanisierungsgrad
path <- "./data-raw/typo_urbalabels.xlsx"
sheets <- readxl::excel_sheets(path)
labels_ <-
map(sheets, function(s) {
lab <- readxl::read_xlsx(path, sheet = s)
lab <-
lab %>%
select(from, to, filter) %>%
arrange(filter, to)
})
# Gemeindetypologie & Urbanisierungsgrad
path <- "./data-raw/typo-urba/labels.xlsx"
sheets <- readxl::excel_sheets(path)
labels_ <-
map(sheets, function(s) {
lab <- readxl::read_xlsx(path, sheet = s)
lab <-
lab %>%
select(from, to, filter) %>%
arrange(filter, to)
})
names(labels) <- sheets
names(labels_) <- sheets
labels_
labels <- list()
## code to prepare `labels` dataset goes here
library(tidyverse)
library(readxl)
labels <- list()
# Gemeindetypologie & Urbanisierungsgrad
path <- "./data-raw/typo_urba/labels.xlsx"
sheets <- readxl::excel_sheets(path)
labels_ <-
map(sheets, function(s) {
lab <- readxl::read_xlsx(path, sheet = s)
lab <-
lab %>%
select(from, to, filter) %>%
arrange(filter, to)
})
names(labels_) <- sheets
labels$typo_urba <- labels_
usethis::use_data(labels, overwrite = TRUE)
devtools::load_all()
usethis::use_version
usethis::use_version()
Heimisc::reinstall()
devtools::load_all()
devtools::document()
devtools::load_all()
Heimisc::labels
Heimisc::labels$typo_urba
library(Heimisc)
detach("package:Heimisc", unload = TRUE)
remove.packages("Heimisc", lib="~/R/x86_64-pc-linux-gnu-library/4.3")
devtools::install_github("dheimgartner/Heimisc")
Heimisc::labels
library(snndata)
remove.packages("snndata")
devtools::load_all()
get_cran()
install("snndata")
getOption("repos")
usethis::edit_r_profile()
remove.packages("Heimisc")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
install.packages("Heimisc", repos = "file://home/daniehei/_CRAN")
Heimisc::uninstall("addresses")
getOption("repos")
install.packages("addresses")
Heimisc::uninstall("addresses")
devtools::load_all()
library(Heimisc)
library(Heimisc::plot_colors)
devtools::document()
devtools::document()
library(Heimisc)
Heimisc::my_theme
